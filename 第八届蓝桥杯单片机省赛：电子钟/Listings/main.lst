C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\ds18b20;.\ds1302) DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          # include "reg52.h"
   2          # include "ds1302.h"
   3          # include "onewire.h"
   4          
   5          typedef unsigned char uchar;
   6          typedef unsigned int uint;
   7          
   8          sbit S7 = P3^0;
   9          sbit S6 = P3^1;
  10          sbit S5 = P3^2;
  11          sbit S4 = P3^3;
  12          
  13          sbit L1 = P0^0;
  14          
  15          uchar duanma[18] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0
             -x7f};
  16          uchar Write_addr[3] = {0x80,0x82,0x84};    //DS1302时钟每一位写入的地址
  17          uchar Read_addr[3] = {0x81,0x83,0x85};     //DS1302时钟每一位读取的地址
  18          uchar Timer[3] = {87,89,35};           //用来存储读取的时间，初始化为23时59分50秒
  19          uchar Clock[3] = {0,0,0};              //用来存储闹钟的时间，初始化为00时00分00秒
  20          uint temp = 0;                 //用来存储读取的温度
  21          uint count = 0;                //定时器的计数变量
  22          bit smg_f = 1;                   //控制数码管闪烁的标志变量
  23          uint led_c = 0;                //控制LED的计数变量变量
  24          bit led_f = 0;                 //控制LED闪烁的标志变量
  25          bit led_k = 0;                 //控制led的开关变量,0为关
  26          uchar k7 = 0;                //记录S7的当前状态，0为时钟显示，1为设置时钟的时
  27          uchar k6 = 0;                //记录S6的当前状态，0为S6未按下，1为设置闹钟的时
  28          
  29          void LEDRunning ();              //对LED显示函数进行声明
  30          
  31          //=======================锁存器的控制===========================
  32          void SelectHC573 (uchar n)
  33          {
  34   1        switch (n)
  35   1        {
  36   2          case 4:
  37   2            P2 = (P2 & 0x1f) | 0x80;break;
  38   2          case 5:
  39   2            P2 = (P2 & 0x1f) | 0xa0;break;
  40   2          case 6:
  41   2            P2 = (P2 & 0x1f) | 0xc0;break;
  42   2          case 7:
  43   2            P2 = (P2 & 0x1f) | 0xe0;break;
  44   2          case 0:
  45   2            P2 = (P2 & 0x1f) | 0x00;break;
  46   2      
  47   2        }
  48   1      }
  49          //==============================================================
  50          
  51          /*========================普通延时函数==========================
  52          void Delay (uint t)
  53          {
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 2   

  54            while (t--);
  55          }
  56          ==============================================================*/
  57          
  58          //========================BCD转十进制===========================
  59          uchar BCDtoTEN (uchar dat)
  60          {
  61   1        dat = (dat /16) * 10 + (dat % 16);
  62   1        return dat; 
  63   1      }
  64          //==============================================================
  65          
  66          //========================Timer[i]BCD的加减 ====================
  67          uchar Timeradd(uchar dat)
  68          {
  69   1        dat = dat + 1;
  70   1        switch(dat)
  71   1        {
  72   2          case 10:
  73   2            dat = 16;break;      //BCD的10
  74   2          case 26:
  75   2            dat = 32;break;      //BCD的20
  76   2          case 42:
  77   2            dat = 48;break;      //BCD的30
  78   2          case 58:
  79   2            dat = 64;break;      //BCD的40
  80   2          case 74:
  81   2            dat = 80;break;      //BCD的50
  82   2          case 90:
  83   2            dat = 96;break;      //BCD的60
  84   2        }
  85   1        return dat;
  86   1      }
  87          
  88          uchar Timerminus(uchar dat)
  89          {
  90   1        dat = dat - 1;
  91   1        switch(dat)
  92   1        {
  93   2          case 79:
  94   2            dat = 73;break;    
  95   2          case 63:
  96   2            dat = 57;break;
  97   2          case 47:
  98   2            dat = 41;break;
  99   2          case 31:
 100   2            dat = 25;break;
 101   2          case 15:
 102   2            dat = 9;break;
 103   2          case -1:
 104   2            dat = 89;break;   
 105   2        }
 106   1        return dat;
 107   1      }
 108          //==============================================================
 109          
 110          //========================系统初始化============================
 111          void InitSystem ()
 112          {
 113   1        SelectHC573(4);
 114   1        P0 = 0xff;
 115   1        SelectHC573(5);
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 3   

 116   1        P0 = 0x00;
 117   1        SelectHC573(0); 
 118   1      }
 119          //==============================================================
 120          
 121          //=====================定时器T0 - 10ms =========================
 122          void InitTime0 ()
 123          {
 124   1        TMOD = 0x01;
 125   1      
 126   1        TH0 = (65535 - 10000) / 256;
 127   1        TL0 = (65535 - 10000) % 256;
 128   1      
 129   1        TR0 = 1;
 130   1        ET0 = 1;
 131   1        EA = 1;
 132   1      }
 133          
 134          void ServiceT0 () interrupt 1
 135          {
 136   1        TH0 = (65535 - 10000) / 256;
 137   1        TL0 = (65535 - 10000) % 256;
 138   1        
 139   1        count++;
 140   1        if (count == 100)
 141   1        {
 142   2          smg_f = ~smg_f;
 143   2          count = 0;    
 144   2        }
 145   1        
 146   1        if (led_k == 1)
 147   1        {
 148   2          led_c ++;
 149   2          if (led_c % 20 == 0)
 150   2          {
 151   3            led_f = ~led_f;
 152   3            if (led_c >= 500)
 153   3            {
 154   4              led_k = 0;
 155   4              led_c = 0;
 156   4              led_f = 0;
 157   4            } 
 158   3          } 
 159   2        } 
 160   1      }
 161          //==============================================================
 162          
 163          //===================DS1302实时时钟的配置与读取=================
 164          void SetDS1302 ()
 165          {
 166   1        uchar i;
 167   1      
 168   1        Write_Ds1302_Byte(0x8e,0x00);
 169   1        for (i = 0;i<=2;i++)
 170   1        {
 171   2          Write_Ds1302_Byte(Write_addr[i],Timer[i]);
 172   2        }
 173   1        Write_Ds1302_Byte(0x8e,0x80);
 174   1      }
 175          
 176          void ReadDS1302 ()
 177          {
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 4   

 178   1        uchar i;
 179   1      
 180   1        for (i = 0;i<=2;i++)
 181   1        {
 182   2          Timer[i] = Read_Ds1302_Byte(Read_addr[i]);
 183   2        } 
 184   1      }
 185          //==============================================================
 186          
 187          //=====================DS18B20温度读取==========================
 188          void Read_Temp ()
 189          {
 190   1        uchar LSB;
 191   1        uchar MSB;
 192   1      
 193   1        init_ds18b20();
 194   1        Write_DS18B20(0xcc);
 195   1        Write_DS18B20(0x44);  
 196   1        init_ds18b20();
 197   1        Write_DS18B20(0xcc);
 198   1        Write_DS18B20(0xbe);
 199   1        LSB = Read_DS18B20();
 200   1        MSB = Read_DS18B20();
 201   1      
 202   1        temp = (MSB << 8) | LSB;
 203   1      
 204   1        if ((temp & 0xf800) == 0x0000)
 205   1        {
 206   2          temp = temp >> 4;
 207   2        }
 208   1      }
 209          //==============================================================
 210          
 211          //====================数码管相关显示函数========================
 212          void Delay_SMG(uint t)
 213          {
 214   1        while (t--);
 215   1      }
 216          
 217          void ShowSMG_Bit (uchar pos,uchar dat)
 218          {
 219   1        SelectHC573(7);
 220   1        P0 = 0xff;
 221   1        SelectHC573(6);
 222   1        P0 = 0x01 << pos - 1;
 223   1        SelectHC573(7);
 224   1        P0 = dat;
 225   1        SelectHC573(0); 
 226   1      }
 227          
 228          void AllSMG (uchar dat)
 229          {
 230   1        SelectHC573(6);
 231   1        P0 = 0xff;
 232   1        SelectHC573(7);
 233   1        P0 = dat;
 234   1        SelectHC573(0); 
 235   1      }
 236          
 237          void ShowSMG_Time ()
 238          {
 239   1        if (k6 == 0)
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 5   

 240   1        {
 241   2          if (((k7 == 1) & (smg_f == 1)) | (k7 == 0) | (k7 == 2) | (k7 == 3))
 242   2          {
 243   3            ShowSMG_Bit(1,duanma[Timer[2] / 16]);
 244   3            Delay_SMG(500);
 245   3            ShowSMG_Bit(2,duanma[Timer[2] % 16]);
 246   3            Delay_SMG(500);
 247   3          }
 248   2          ShowSMG_Bit(3,duanma[16]);
 249   2          Delay_SMG(500);
 250   2          if (((k7 == 2) & (smg_f == 1)) | (k7 == 0) | (k7 == 1) | (k7 == 3))
 251   2          {
 252   3            ShowSMG_Bit(4,duanma[Timer[1] / 16]);
 253   3            Delay_SMG(500);
 254   3            ShowSMG_Bit(5,duanma[Timer[1] % 16]);
 255   3            Delay_SMG(500);
 256   3          }
 257   2          ShowSMG_Bit(6,duanma[16]);
 258   2          Delay_SMG(500);
 259   2          if (((k7 == 3) & (smg_f == 1)) | (k7 == 0) | (k7 == 2) | (k7 == 1))
 260   2          {
 261   3            ShowSMG_Bit(7,duanma[Timer[0] / 16]);
 262   3            Delay_SMG(500);
 263   3            ShowSMG_Bit(8,duanma[Timer[0] % 16]);
 264   3            Delay_SMG(500);
 265   3          }
 266   2          AllSMG(0xff); 
 267   2        }
 268   1        else if (k6 != 0)
 269   1        {
 270   2          if (((k6 == 1) & (smg_f == 1)) | (k6 == 0) | (k6 == 2) | (k6 == 3))
 271   2          {
 272   3            ShowSMG_Bit(1,duanma[Clock[2] / 10]);
 273   3            Delay_SMG(500);
 274   3            ShowSMG_Bit(2,duanma[Clock[2] % 10]);
 275   3            Delay_SMG(500);
 276   3          }
 277   2          ShowSMG_Bit(3,duanma[16]);
 278   2          Delay_SMG(500);
 279   2          if (((k6 == 2) & (smg_f == 1)) | (k6 == 0) | (k6 == 1) | (k6 == 3))
 280   2          {
 281   3            ShowSMG_Bit(4,duanma[Clock[1] / 10]);
 282   3            Delay_SMG(500);
 283   3            ShowSMG_Bit(5,duanma[Clock[1] % 10]);
 284   3            Delay_SMG(500);
 285   3          }
 286   2          ShowSMG_Bit(6,duanma[16]);
 287   2          Delay_SMG(500);
 288   2          if (((k6 == 3) & (smg_f == 1)) | (k6 == 0) | (k6 == 2) | (k6 == 1))
 289   2          {
 290   3            ShowSMG_Bit(7,duanma[Clock[0] / 10]);
 291   3            Delay_SMG(500);
 292   3            ShowSMG_Bit(8,duanma[Clock[0] % 10]);
 293   3            Delay_SMG(500);
 294   3          }
 295   2          AllSMG(0xff); 
 296   2        }
 297   1      }
 298          
 299          void ShowSMG_Temp ()
 300          {
 301   1        ShowSMG_Bit(6,duanma[temp / 10]);
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 6   

 302   1        Delay_SMG(500);
 303   1        ShowSMG_Bit(7,duanma[temp % 10]);
 304   1        Delay_SMG(500);
 305   1        ShowSMG_Bit(8,duanma[12]);
 306   1        Delay_SMG(500); 
 307   1        AllSMG(0xff);
 308   1      }
 309          
 310          //==============================================================
 311          
 312          //======================浏览按键================================
 313          void Delay_Key (uchar t)
 314          {
 315   1        while (t--);
 316   1      }
 317          
 318          void ScanKey ()
 319          {
 320   1        if (S7 == 0)
 321   1        {
 322   2          Delay_Key(100);
 323   2          if (S7 == 0)
 324   2          {
 325   3            while (S7 == 0)
 326   3            {
 327   4              ShowSMG_Time ();
 328   4              LEDRunning ();
 329   4              ReadDS1302 ();  
 330   4            }
 331   3            if (led_k == 1)
 332   3            {
 333   4              led_k = 0;
 334   4              led_c = 0;
 335   4              led_f = 0;
 336   4            }
 337   3            k7++;
 338   3            if (k7 >= 4)
 339   3            {
 340   4              k7 = 0;
 341   4            }
 342   3          } 
 343   2        }
 344   1        if (S6 == 0)
 345   1        {
 346   2          Delay_Key(100);
 347   2          if (S6 == 0)
 348   2          {
 349   3            while (S6 == 0)
 350   3            {
 351   4              ShowSMG_Time ();
 352   4              LEDRunning ();
 353   4              ReadDS1302 ();  
 354   4            }
 355   3            if (led_k == 1)
 356   3            {
 357   4              led_k = 0;
 358   4              led_c = 0;
 359   4              led_f = 0;
 360   4            }
 361   3            k6++;
 362   3            if (k6 >= 4)
 363   3            {
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 7   

 364   4              k6 = 0;
 365   4            } 
 366   3          } 
 367   2        }
 368   1        if (S5 == 0)
 369   1        {
 370   2          Delay_Key(100);
 371   2          if (S5 == 0)
 372   2          {
 373   3            while (S5 == 0)
 374   3            {
 375   4              ShowSMG_Time ();
 376   4              LEDRunning ();
 377   4              ReadDS1302 ();  
 378   4            }
 379   3            if (led_k == 1)
 380   3            {
 381   4              led_k = 0;
 382   4              led_c = 0;
 383   4              led_f = 0;
 384   4            }
 385   3            if (k7 == 1)
 386   3            {
 387   4              Timer[2] = Timeradd(Timer[2]);      
 388   4              if (Timer[2] >= 96)
 389   4              {
 390   5                Timer[2] = 0;
 391   5              }
 392   4            }
 393   3            else if (k7 == 2)
 394   3            { 
 395   4              Timer[1] = Timeradd(Timer[1]);
 396   4              if (Timer[1] >= 96)
 397   4              {
 398   5                Timer[1] = 0;
 399   5              } 
 400   4            }
 401   3            else if (k7 == 3)
 402   3            { 
 403   4              Timer[0
 404   4              ] = Timeradd(Timer[0]);
 405   4              if (Timer[0] >= 96)
 406   4              {
 407   5                Timer[0] = 0;
 408   5              } 
 409   4            }
 410   3            if (k6 == 1)     
 411   3            { 
 412   4              Clock[2] = Clock[2] + 1;
 413   4              if (Clock[2] >= 24)
 414   4              {
 415   5                Clock[2] = 0;
 416   5              } 
 417   4            }
 418   3            if (k6 == 2)
 419   3            { 
 420   4              Clock[1] = Clock[1] + 1;
 421   4              if (Clock[1] >= 60)
 422   4              {
 423   5                Clock[1] = 0;
 424   5              } 
 425   4            }
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 8   

 426   3            if (k6 == 3)
 427   3            { 
 428   4              Clock[0] = Clock[0] + 1;
 429   4              if (Clock[0] >= 60)
 430   4              {
 431   5                Clock[0] = 0;
 432   5              } 
 433   4            }
 434   3            SetDS1302 ();
 435   3          } 
 436   2        }
 437   1        if (S4 == 0)
 438   1        {
 439   2          Delay_Key(100);
 440   2          if (S4 == 0)
 441   2          {
 442   3            while (S4 == 0)
 443   3            {
 444   4              if ((k6 == 0) & (k7 == 0))
 445   4              {
 446   5                Read_Temp ();
 447   5                ShowSMG_Temp ();  
 448   5              }
 449   4              else 
 450   4              {
 451   5                ShowSMG_Time ();
 452   5                LEDRunning ();  
 453   5              }
 454   4              ReadDS1302 ();  
 455   4            }
 456   3            if (led_k == 1)
 457   3            {
 458   4              led_k = 0;
 459   4              led_c = 0;
 460   4              led_f = 0;
 461   4            }
 462   3            if (k7 == 1)
 463   3            {
 464   4              Timer[2] = Timerminus(Timer[2]);      
 465   4              if (Timer[2] == 89)
 466   4              {
 467   5                Timer[2] = 35;
 468   5              }
 469   4            }
 470   3            else if (k7 == 2)
 471   3            { 
 472   4              Timer[1] = Timerminus(Timer[1]);  
 473   4            }
 474   3            else if (k7 == 3)
 475   3            { 
 476   4              Timer[0] = Timerminus(Timer[0]);  
 477   4            }
 478   3      
 479   3            if (k6 == 1)     
 480   3            { 
 481   4              Clock[2] = Clock[2] - 1;
 482   4              if (Clock[2] == -1)
 483   4              {
 484   5                Clock[2] = 23;
 485   5              } 
 486   4            }
 487   3            else if (k6 == 2)
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 9   

 488   3            { 
 489   4              Clock[1] = Clock[1] - 1;
 490   4              if (Clock[1] == -1)
 491   4              {
 492   5                Clock[1] = 59;
 493   5              } 
 494   4            }
 495   3            else if (k6 == 3)
 496   3            { 
 497   4              Clock[0] = Clock[0] - 1;
 498   4              if (Clock[0] == -1)
 499   4              {
 500   5                Clock[0] = 59;
 501   5              } 
 502   4            }
 503   3            SetDS1302 ();
 504   3          } 
 505   2        } 
 506   1      }
 507          //==============================================================
 508          
 509          //======================LED显示函数=============================
 510          void LEDRunning ()
 511          {
 512   1        if ((BCDtoTEN(Timer[0]) == Clock[0]) & (BCDtoTEN(Timer[1]) == Clock[1]) & (BCDtoTEN(Timer[2]) == Clock[2]
             -))
 513   1        {
 514   2          led_k = 1;    
 515   2        }
 516   1        if (led_f == 1)
 517   1        {
 518   2          SelectHC573(4);
 519   2          L1 = 0; 
 520   2          SelectHC573(0);
 521   2        }
 522   1        else if (led_f == 0)
 523   1        {
 524   2          SelectHC573(4);
 525   2          L1 = 1; 
 526   2          SelectHC573(0);
 527   2        } 
 528   1      }
 529          //==============================================================
 530          
 531          //=========================主函数===============================
 532          void main (void)
 533          {
 534   1        InitSystem ();
 535   1        SetDS1302 ();
 536   1        InitTime0 ();
 537   1        while (1)
 538   1        { 
 539   2          ReadDS1302 ();
 540   2          ScanKey ();
 541   2          ShowSMG_Time ();
 542   2          LEDRunning ();  
 543   2        }
 544   1      }
 545          //==============================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.59.0.0   MAIN                                                              02/15/2022 18:46:53 PAGE 10  

   CODE SIZE        =   1895    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
